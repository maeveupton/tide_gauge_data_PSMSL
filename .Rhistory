geom_point()+
geom_line()+
facet_wrap(~Treatment)
ggplot(Rabbit, aes(x = Dose, y = BPchange,colour = Treatment)) +
geom_point()+
geom_line()+
facet-wrap(~Animal)
ggplot(Rabbit, aes(x = Dose, y = BPchange,colour = Treatment)) +
geom_point()+
geom_line()+
facet_wrap(~Animal)
Rabbit %>%
group_by(Treatment) %>%
summarise(mean_BP = mean(BPchange))
Rabbit %>%
group_by(Animal) %>%
summarise(mean_BP = mean(BPchange),
var_BP = var(BPchange))
Rabbit %>%
group_by(Animal,Treatment) %>%
summarise(mean_BP = mean(BPchange),
var_BP = var(BPchange))
devtools::install_github("ncahill89/EIVmodels")
devtools::install_github("ncahill89/EIVmodels")
#devtools::install_github("ncahill89/EIVmodels")
library(EIVmodels)
dat <- sim_slr(n_sim = 10,
alpha = 0,
beta = 1,
x_err = 0.1)
dat
plot_dat(dat,
add_truth = TRUE)
mod_eiv_slr <- run_mod(dat,
model = "model_eiv_slr")
plot_res(mod_eiv_slr,
add_truth = TRUE)
mod_reg_res <- par_est(mod = mod_eiv_slr)
mod_reg_res$pred_summary
mod_reg_res$par_summary
EIVmodels::NJ_CC
plot_dat(NJ_CC)
mod_eiv_slr <- run_mod(NJ_CC,
model = "model_eiv_slr",
scale_factor = 1000)
mod_reg_res <- par_est(mod = mod_eiv_slr)
mod_reg_res$par_summary
plot_res(mod_eiv_slr)
mod_eiv_cp1 <- run_mod(NJ_CC,
model = "model_eiv_cp1",
scale_factor = 1000)
mod_cp_res <- par_est(mod = mod_eiv_cp1)
mod_cp_res$par_summary
plot_res(mod_eiv_cp1)
mod_eiv_igp <- run_mod(NJ_CC,
model = "model_eiv_igp",
scale_factor = 1000)
mod_igp_res <- par_est(mod = mod_eiv_igp)
mod_igp_res$pred_summary
mod_igp_res$par_summary
plot_res(mod_eiv_igp)
knitr::opts_chunk$set(echo = TRUE)
biopsy <- MASS::biopsy %>% drop_na() %>% select(-ID)
library(tidyverse)
glimpse(quakes)
biopsy <- MASS::biopsy %>% drop_na() %>% select(-ID)
glimpse(biopsy)
?biopsy
library(rsample)
?rsample
?initial_split
# Split data into training set
biopsy_split <- initial_split(biopsy, prop = 0.6)
train_biopsy_data <- training(biopsy_split)
test_biopsy_data  <- test(biopsy_split)
test_biopsy_data  <- testing(biopsy_split)
train_biopsy_data
dim(train_biopsy_data)
dim(test_biopsy_data)
?glm
logistic_model  <- glm(class ~ ., family = binomial, data = train_biopsy_data)
logistic_model
library(rpart)
library(rpart.plot)
?rpart
library(rpart)
library(rpart.plot)
tree_model <- rpart(class ~ .,data = train_biopsy_data)
rpart.plot(tree_model)
?predict
biopsy_res <- test_biopsy_data %>%
mutate(pred_p1 = (predict(logistic_model, type = "response",
newdata = test_biopsy_data))) %>%
mutate(pred_p2 = (predict(tree_model,
newdata = test_biopsy_data))
biopsy_res
biopsy_res <- test_biopsy_data %>%
mutate(pred_p1 = (predict(logistic_model, type = "response",
newdata = test_biopsy_data))) %>%
mutate(pred_p2 = (predict(tree_model,
newdata = test_biopsy_data))
)
biopsy_res
glimpse(biopsy_res)
pull(malignant)
biopsy_res <- test_biopsy_data %>%
mutate(pred_p1 = (predict(logistic_model, type = "response",
newdata = test_biopsy_data))) %>%
mutate(pred_p2 = (predict(tree_model,
newdata = test_biopsy_data)) %>% as_tibble() %>% pull(malignant)) %>%
mutate(pred_class1 = ifelse(pred_p1 >=0.5,"malignant","benign")) %>%
mutate(pred_class2 = ifelse(pred_p2 >=0.5,"malignant","benign"))
biopsy_res
confusion_logistic <- biopsy_res %>%
select(class, pred_class1) %>%
table
confusion_logistic
confusion_tree <- biopsy_res %>%
select(class, pred_class2) %>%
table
confusion_tree
accuracy_log <- (confusion_logistic %>%  diag() %>% sum)/nrow(biopsy_res)
accuracy_log
accuracy_tree <- (confusion_tree %>%  diag() %>% sum)/nrow(biopsy_res)
accuracy_tree
confusion_logistic
TPR_log <- 88/(88+7)
TPR_log
confusion_tree
TPR_tree <- 89/89+6
TPR_tree
TPR_tree <- 89/(89+6)
TPR_tree
TPR_log
TPR_tree
knitr::opts_chunk$set(echo = TRUE)
biopsy <- MASS::biopsy %>% drop_na() %>% select(-ID)
glimpse(biopsy)
?biopsy
library(rsample)
biopsy_split <- initial_split(biopsy, prop = 0.6)
set.seed(1234)
biopsy_split <- initial_split(biopsy, prop = 0.6)
library(rsample)
set.seed(1234)
biopsy_split <- initial_split(biopsy, prop = 0.6)
train_biopsy_data <- training(biopsy_split)
test_biopsy_data  <- testing(biopsy_split)
train_biopsy_data
dim(train_biopsy_data)
dim(test_biopsy_data)
logistic_model  <- glm(class ~ ., family = binomial, data = train_biopsy_data)
logistic_model
library(rpart)
library(rpart.plot)
tree_model <- rpart(class ~ .,data = train_biopsy_data)
rpart.plot(tree_model)
biopsy_res <- test_biopsy_data %>%
mutate(pred_p1 = (predict(logistic_model, type = "response",
newdata = test_biopsy_data))) %>%
mutate(pred_p2 = (predict(tree_model,
newdata = test_biopsy_data)) %>% as_tibble() %>% pull(malignant)) %>%
mutate(pred_class1 = ifelse(pred_p1 >=0.5,"malignant","benign")) %>%
mutate(pred_class2 = ifelse(pred_p2 >=0.5,"malignant","benign"))
biopsy_res
confusion_logistic <- biopsy_res %>%
select(class, pred_class1) %>%
table
confusion_logistic
confusion_tree <- biopsy_res %>%
select(class, pred_class2) %>%
table
confusion_tree
accurancy_log <- (confusion_logistic %>% diag() %>% sum)/nrow(biopsy_res)
accurancy_log
accuracy_tree <- (confusion_tree %>% diag() %>% sum)/nrow(biopsy_res)
accuracy_tree
TPR_log <- 87/(87+4)
TPR_log
TPR_tree <- 84/(84+7)
TPR_tree
knitr::opts_chunk$set(echo = TRUE)
biopsy <- MASS::biopsy %>% drop_na() %>% select(-ID)
glimpse(biopsy)
library(rsample)
set.seed(1234)
biopsy_split <- initial_split(biopsy, prop = 0.6)
train_biopsy_data <- training(biopsy_split)
test_biopsy_data  <- testing(biopsy_split)
train_biopsy_data
test_biopsy_data
logistic_model  <- glm(class ~ ., family = binomial, data = train_biopsy_data)
logistic_model
library(rpart)
library(rpart.plot)
tree_model <- rpart(class ~ .,data = train_biopsy_data)
rpart.plot(tree_model)
biopsy_res <- test_biopsy_data %>%
mutate(pred_p1 = (predict(logistic_model, type = "response",
newdata = test_biopsy_data))) %>%
mutate(pred_p2 = (predict(tree_model,
newdata = test_biopsy_data)) %>% as_tibble() %>% pull(malignant)) %>%
mutate(pred_class1 = ifelse(pred_p1 >=0.5,"malignant","benign")) %>%
mutate(pred_class2 = ifelse(pred_p2 >=0.5,"malignant","benign"))
biopsy_res
confusion_logistic <- biopsy_res %>%
select(class, pred_class1) %>%
table
confusion_logistic
confusion_tree <- biopsy_res %>%
select(class, pred_class2) %>%
table
confusion_tree
accuracy_log <- (confusion_logistic %>% diag() %>% sum)/nrow(biopsy_res)
accuracy_log
accuracy_tree <- (confusion_tree %>% diag() %>% sum)/nrow(biopsy_res)
accuracy_tree
TPR_log <- 87/(87+4)
TPR_log
TPR_tree <- 84/(84+7)
TPR_tree
nrow(biopsy_res)
(confusion_logistic %>% diag() %>% sum)
nrow(biopsy_res)
knitr::opts_chunk$set(echo = TRUE)
biopsy <- MASS::biopsy %>% drop_na() %>% select(-ID)
glimpse(biopsy)
library(rsample)
set.seed(12345)
biopsy_split <- initial_split(biopsy, prop = 0.6)
train_biopsy_data <- training(biopsy_split)
test_biopsy_data  <- testing(biopsy_split)
test_biopsy_data
train_biopsy_data
logistic_model  <- glm(class~., family = binomial, data = train_biopsy_data)
logistic_model
library(rpart)
library(rpart.plot)
tree_model <- rpart(class ~ .,data = train_biopsy_data)
rpart.plot(tree_model)
biopsy_res <- test_biopsy_data %>%
mutate(pred_p1 = (predict(logistic_model, type = "response",
newdata = test_biopsy_data))) %>%
mutate(pred_p2 = (predict(tree_model,
newdata = test_biopsy_data)) %>% as_tibble() %>% pull(malignant)) %>%
mutate(pred_class1 = ifelse(pred_p1 >=0.5,"malignant","benign")) %>%
mutate(pred_class2 = ifelse(pred_p2 >=0.5,"malignant","benign"))
biopsy_res
confusion_logistic <- biopsy_res %>%
select(class, pred_class1) %>%
table
confusion_logistic
confusion_tree <- biopsy_res %>%
select(class, pred_class2) %>%
table
confusion_tree
accuracy_log <- (confusion_logistic %>% diag() %>% sum)/nrow(biopsy_res)
accuracy_log
accuracy_tree <- (confusion_tree %>% diag() %>% sum)/nrow(biopsy_res)
accuracy_tree
TPR_log <- 90/(90+3)
TPR_log
TPR_tree <- 84/(84+9)
TPR_tree
TPR_log
View(biopsy)
devtools::install_github("ncahill89/BTF")
library(BTF)
modern_mod <- run_modern(modern_elevation = NJ_modern_elevation,
modern_species = NJ_modern_species,
n.iter = 10,
n.burnin = 1,
n.thin = 1)
source("~/Desktop/Github/tide_gauge_data_PSMSL/psml_annual_tide_data_code.R", echo=TRUE)
source("~/Desktop/Github/tide_gauge_data_PSMSL/psml_monthly_tide_data_code.R", echo=TRUE)
source("~/Desktop/Github/tide_gauge_data_PSMSL/psml_annual_tide_data_code.R", echo=TRUE)
source("~/Desktop/Github/tide_gauge_data_PSMSL/psml_monthly_tide_data_code.R", echo=TRUE)
source("~/Desktop/Github/tide_gauge_data_PSMSL/psml_monthly_tide_data_code.R", echo=TRUE)
source("~/Desktop/Github/tide_gauge_data_PSMSL/psml_annual_tide_data_code.R", echo=TRUE)
##----------Updated PSMSL Tide Data Code-----------
#--Monthly Data---
rm(list = ls())
# Set Directory
setwd("/Users/mupton/Desktop/Github/tide_gauge_data_PSMSL")
library(tidyverse)
library(data.table)
###------Individual File Reading Test-------
# Read the gauge file list (location, names)
file_list <- read.csv("rlr_monthly/filelist.txt",stringsAsFactors = FALSE, header=F,sep=";")
colnames(file_list)<- c("id","latitude","longitude","name","coastline","stationcode","stationflag")
# Removing white space in the name of each site
file_list$name <- gsub("[[:space:]]", "",file_list$name)
file_list$stationflag <- gsub("[[:space:]]", "",file_list$stationflag)
# Read 1st data set - oldest station with 1807 start date (sets the initial date)
site_1 <- read.csv("rlr_monthly/data/1.rlrdata",stringsAsFactors = FALSE, header=F,sep=";")
site_1$V2[site_1$V2 == -99999] <- NA
site_1$id <- "1"
#--What is flag_attention_2?---
colnames(site_1) = c("Age","RSL","flag_attention_1","flag_attention_2","id")
# Combining file list (location,names) with the SL vs Age data for site 1
full_site_1_df <- merge(site_1,file_list[1,])
# Read 2nd data set
site_2 <- read.csv("rlr_monthly/data/10.rlrdata",stringsAsFactors = FALSE, header=F,sep=";")
site_2$V2[site_2$V2 == -99999] <- NA
site_2$id <- "2"
colnames(site_2) <- c("Age","RSL","flag_attention_1","flag_attention_2","id")
# Combining file list (location,names) with the SL vs Age data for site 2
full_site_2_df <- merge(site_2,file_list[2,])
#--Joining site 1 & 2---
SL_df_site_1_2<- rbind(full_site_1_df,full_site_2_df)
#--Remove NAs--
SL_df_site_1_2<- SL_df_site_1_2 %>%  drop_na()
#-- Removing sites which have a station flag raised as they are poor sites---
SL_df_site_1_2 <- SL_df_site_1_2 %>%  filter(!stationflag == "Y")
# Read 2nd data set
site_2 <- read.csv("rlr_monthly/data/10.rlrdata",stringsAsFactors = FALSE, header=F,sep=";")
site_2$V2[site_2$V2 == -99999] <- NA
site_2$id <- "2"
colnames(site_2) <- c("Age","RSL","flag_attention_1","flag_attention_2","id")
# Combining file list (location,names) with the SL vs Age data for site 2
full_site_2_df <- merge(site_2,file_list[2,])
#--Joining site 1 & 2---
SL_df_site_1_2<- rbind(full_site_1_df,full_site_2_df)
head(SL_df_site_1_2)
#--Remove NAs--
#SL_df_site_1_2<- SL_df_site_1_2 %>%  drop_na()
# --Check if have 12 months data for this year
#SL_df_site_1_2 <- ifelse(SL_df_site_1_2,)
#-- Removing sites which have a station flag raised as they are poor sites---
SL_df_site_1_2 <- SL_df_site_1_2 %>%  filter(!stationflag == "Y")
#---Averaging monthly RSL values---
SL_df_site_1_2_average <- SL_df_site_1_2 %>%
group_by(Age) %>%
summarise(RSL = mean(RSL))
#---Removing the offset of 7000mm---
SL_df_site_1_2$RSL <- SL_df_site_1_2$RSL - 7000
# #--Plotting 2 sites----
test_plot <- ggplot()+
geom_point(data = SL_df_site_1_2, aes(x = Age, y = RSL))+
facet_wrap(~id)
test_plot
#-----Updated PSMSL Tide Data Code-----
# Reference: https://gist.github.com/flare9x/a13482087e322b8ba6c208194c85a182
#--Annual Data---
rm(list = ls())
# Set Directory
setwd("/Users/mupton/Desktop/Github/tide_gauge_data_PSMSL")
library(tidyverse)
library(data.table)
###------Individual File Reading Test-------
# Read the gauge file list (location, names)
file_list <- read.csv("rlr_annual/filelist.txt",stringsAsFactors = FALSE, header=F,sep=";")
colnames(file_list)<- c("id","Latitude","Longitude","name","coastline","stationcode","stationflag")
# Removing white space in the name of each site
file_list$name <- gsub("[[:space:]]", "",file_list$name)
file_list$stationflag <- gsub("[[:space:]]", "",file_list$stationflag)
# Read 1st data set - oldest station with 1807 start date (sets the initial date)
site_1 <- read.csv("rlr_annual/data/1.rlrdata",stringsAsFactors = FALSE, header=F,sep=";")
site_1$V2[site_1$V2 == -99999] <- NA
site_1$id <- "1"
#--What is flag_attention_2?---
colnames(site_1) = c("Age","RSL","flag_attention_1","flag_attention_2","id")
# Combining file list (location,names) with the SL vs Age data for site 1
full_site_1_df <- merge(site_1,file_list[1,])
# Read 2nd data set
site_2 <- read.csv("rlr_annual/data/10.rlrdata",stringsAsFactors = FALSE, header=F,sep=";")
site_2$V2[site_2$V2 == -99999] <- NA
site_2$id <- "2"
colnames(site_2) <- c("Age","RSL","flag_attention_1","flag_attention_2","id")
# Combining file list (location,names) with the SL vs Age data for site 2
full_site_2_df <- merge(site_2,file_list[2,])
#--Joining site 1 & 2---
SL_df_site_1_2<- rbind(full_site_1_df,full_site_2_df)
#--Remove NAs--
SL_df_site_1_2<- SL_df_site_1_2 %>%  drop_na()
#-- Removing sites which have a station flag raised as they are poor sites---
SL_df_site_1_2 <- SL_df_site_1_2 %>%  filter(!stationflag == "Y")
#---Removing the offset of 7000mm---
SL_df_site_1_2$RSL <- SL_df_site_1_2$RSL - 7000
###------------Loop to open all RSL & Age data files------------
read_plus <- function(flnm) {
fread(flnm, sep= ";") %>% # fread quicker way to read in & allows for ; to be used
mutate(filename = flnm) # allows you to include the file name as id
}
test_plot <- ggplot()+
geom_point(data = SL_df_site_1_2, aes(x = Age, y = RSL))+
facet_wrap(~id)
test_plot
###------------Loop to open all RSL & Age data files------------
read_plus <- function(flnm) {
fread(flnm, sep= ";") %>% # fread quicker way to read in & allows for ; to be used
mutate(filename = flnm) # allows you to include the file name as id
}
temp_SL<-
list.files(path = "rlr_annual/data",
pattern = "*.rlrdata",
full.names = T) %>%
map_df(~read_plus(.)) %>%  as.tibble()
colnames(temp_SL) = c("Age","RSL","flag_attention_1","flag_attention_2","id")
SL_df <- temp_SL %>%
mutate(id = str_extract(id,"[0-9]+")) %>% # pulling out the file number from string
filter(!RSL== -99999) %>%  # Cases where bad data was collected
mutate(RSL = RSL- 7000) # Removing the offset. RSL in mm -- This offset is not right
#--Joining SL data with location names--
annual_SL_tide_df <-merge(SL_df,file_list,by = "id",all = TRUE)
#-- Removing sites which have a station flag raised as they are poor sites---
annual_SL_tide_df <- annual_SL_tide_df %>%
filter(!stationflag == "Y") %>%
drop_na() #%>%
#--Global Mean Sea Level---
gmsl_tidal_gauge <- annual_SL_tide_df %>%
group_by(Age) %>%
summarise(RSL = mean(RSL))
gmsl_plot <-
ggplot()+
geom_line(data = gmsl_tidal_gauge, aes(x = Age, y = RSL))+
theme(legend.position="none")
#facet_wrap(~id)
gmsl_plot
SL_df %>% dplyr::select(Age, id) %>% group_by(id) %>% summarise(range_age = range(Age))
###------------Loop to open all RSL & Age data files------------
read_plus <- function(flnm) {
fread(flnm, sep= ";") %>% # fread quicker way to read in & allows for ; to be used
mutate(filename = flnm) # allows you to include the file name as id
}
temp_SL<-
list.files(path = "rlr_annual/data",
pattern = "*.rlrdata",
full.names = T) %>%
map_df(~read_plus(.)) %>%  as.tibble()
colnames(temp_SL) = c("Age","RSL","flag_attention_1","flag_attention_2","id")
SL_df <- temp_SL %>%
mutate(id = str_extract(id,"[0-9]+")) %>% # pulling out the file number from string
filter(!RSL== -99999) #%>%  # Cases where bad data was collected
test <- SL_df %>% dplyr::select(Age, id) %>% group_by(id) %>% summarise(range_age = range(Age))
test
test <- SL_df %>% dplyr::select(Age, id) %>%
group_by(id) %>%
summarise(min_range_age = min(range(Age)))
test
#-----Updated PSMSL Tide Data Code-----
# Reference: https://gist.github.com/flare9x/a13482087e322b8ba6c208194c85a182
#--Annual Data---
rm(list = ls())
# Set Directory
setwd("/Users/mupton/Desktop/Github/tide_gauge_data_PSMSL")
library(tidyverse)
library(data.table)
###------Individual File Reading Test-------
# Read the gauge file list (location, names)
file_list <- read.csv("rlr_annual/filelist.txt",stringsAsFactors = FALSE, header=F,sep=";")
colnames(file_list)<- c("id","Latitude","Longitude","name","coastline","stationcode","stationflag")
# Removing white space in the name of each site
file_list$name <- gsub("[[:space:]]", "",file_list$name)
file_list$stationflag <- gsub("[[:space:]]", "",file_list$stationflag)
# Read 1st data set - oldest station with 1807 start date (sets the initial date)
site_1 <- read.csv("rlr_annual/data/1.rlrdata",stringsAsFactors = FALSE, header=F,sep=";")
site_1$V2[site_1$V2 == -99999] <- NA
site_1$id <- "1"
#--What is flag_attention_2?---
colnames(site_1) = c("Age","RSL","flag_attention_1","flag_attention_2","id")
# Combining file list (location,names) with the SL vs Age data for site 1
full_site_1_df <- merge(site_1,file_list[1,])
# Read 2nd data set
site_2 <- read.csv("rlr_annual/data/10.rlrdata",stringsAsFactors = FALSE, header=F,sep=";")
site_2$V2[site_2$V2 == -99999] <- NA
site_2$id <- "2"
colnames(site_2) <- c("Age","RSL","flag_attention_1","flag_attention_2","id")
# Combining file list (location,names) with the SL vs Age data for site 2
full_site_2_df <- merge(site_2,file_list[2,])
#--Joining site 1 & 2---
SL_df_site_1_2<- rbind(full_site_1_df,full_site_2_df)
#--Remove NAs--
SL_df_site_1_2<- SL_df_site_1_2 %>%  drop_na()
#-- Removing sites which have a station flag raised as they are poor sites---
SL_df_site_1_2 <- SL_df_site_1_2 %>%  filter(!stationflag == "Y")
#---Removing the offset of 7000mm---
SL_df_site_1_2$RSL <- SL_df_site_1_2$RSL - 7000
# #--Plotting 2 sites----
test_plot <- ggplot()+
geom_point(data = SL_df_site_1_2, aes(x = Age, y = RSL))+
facet_wrap(~id)
test_plot
###------------Loop to open all RSL & Age data files------------
read_plus <- function(flnm) {
fread(flnm, sep= ";") %>% # fread quicker way to read in & allows for ; to be used
mutate(filename = flnm) # allows you to include the file name as id
}
temp_SL<-
list.files(path = "rlr_annual/data",
pattern = "*.rlrdata",
full.names = T) %>%
map_df(~read_plus(.)) %>%  as.tibble()
# Warnings there are some files without data
colnames(temp_SL) = c("Age","RSL","flag_attention_1","flag_attention_2","id")
SL_df <- temp_SL %>%
mutate(id = str_extract(id,"[0-9]+")) %>% # pulling out the file number from string
filter(!RSL== -99999) #%>%  # Cases where bad data was collected
#mutate(RSL = RSL- 7000) # Removing the offset. RSL in mm -- This offset is not right
#-- Reference frame calculation for USA (may change for later use)---
#SL_df %>%  filter(Age )
#--Joining SL data with location names--
annual_SL_tide_df <-merge(SL_df,file_list,by = "id",all = TRUE)
warnings()
annual_SL_tide_df
#-- Removing sites which have a station flag raised as they are poor sites---
annual_SL_tide_df <- annual_SL_tide_df %>%
filter(!stationflag == "Y") %>%
drop_na() #%>%
write.csv(annual_SL_tide_df,"annual_SL_tide_df.csv")
source("~/Desktop/Github/tide_gauge_data_PSMSL/psml_annual_tide_data_code.R", echo=TRUE)
annual_SL_tide_df
