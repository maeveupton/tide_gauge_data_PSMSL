group_by(species) %>%
summarise(cor_species = cor(bill_length_mm,bill_depth_mm))
lm(bill_depth_mm ~ bill_length_mm, data = penguin_dat)
lm(bill_depth_mm ~ bill_length_mm + species, data = penguin_dat)
ggplot(penguin_dat, aes(x = bill_length_mm, y = bill_depth_mm, colour = species))+
geom_point()+
geom_smooth(method = "lm")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
exercise_dat <- read_csv("https://www.dropbox.com/s/5nv8wee1defa0si/exercise_dat.csv?raw=1")
exercise_dat
ggplot(exercise_dat, aes(x = hours_exercise, y = risk)) +
geom_point()+
geom_smooth(method = "lm")
ggplot(exercise_dat, aes(x = hours_exercise, y = risk)) +
geom_point()+
geom_smooth(method = "lm")
ggplot(exercise_dat, aes(x = hours_exercise, y = risk)) +
geom_point()+
geom_smooth(method = "lm")
ggplot(exercise_dat, aes(x = hours_exercised, y = risk)) +
geom_point()+
geom_smooth(method = "lm")
fit <- lm(risk ~ hours_exercised, data = exercise_dat)
fit
#predict(fit, data.frame(hours_exercised = 5))
predict(fit, data.frame(hours_exercised = 5))
ggplot(exercise_dat, aes(x = hours_exercised, y = risk)) +
geom_point()+
facet_wrap(~age_cat)
fit2
fit2 <- exercise_dat %>%
lm(risk ~ hours_exercised + age_cat, data = .)
fit2
ggplot(exercise_dat, aes(x = hours_exercised, y = risk)) +
geom_point()+
facet_wrap(~age_cat)+
geom_smooth(method = "lm")
predict(fit2, data.frame(hours_exercised = 5,
age_cat = "under 50"))
predict(fit2, data.frame(hours_exercised = 5,
age_cat = "over 50"))
penguin_dat <- read_csv("https://www.dropbox.com/s/6vzmrpjyyjadt3x/penguin_dat.csv?raw=1")
penguin_dat
ggplot(penguin_dat, aes(x = bill_length_mm, y = bill_depth_mm))+
geom_point()
#cor(???)
ggplot(penguin_dat, aes(x = bill_length_mm, y = bill_depth_mm))+
geom_point()+
geom_smooth(method = "lm")
cor(penguin_dat$bill_length_mm,penguin_dat$bill_depth_mm)
ggplot(penguin_dat, aes(x = bill_length_mm, y = bill_depth_mm,colour = species))+
geom_point()
# penguin_dat %>%
#   group_by(??) %>%
#   summarise(??)
penguin_dat %>%
group_by(species) %>%
summarise(cor_spec = cor(bill_length_mm,bill_length_mm))
penguin_dat %>%
group_by(species) %>%
summarise(cor_spec = cor(bill_length_mm,bill_depth_mm))
lm(bill_depth_mm ~ bill_length_mm, data = penguin_dat)
lm(bill_depth_mm ~ bill_length_mm + species, data = penguin_dat)
ggplot(penguin_dat, aes(x = bill_length_mm, y = bill_depth_mm, colour = species))+
geom_point()+
geom_smooth(methods = "lm")
ggplot(penguin_dat, aes(x = bill_length_mm, y = bill_depth_mm, colour = species))+
geom_point()+
geom_smooth(method = "lm")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data('oatvar', package='faraway')
library(tidyverse)
data('oatvar', package='faraway')
library(tidyverse)
data('oatvar', package='faraway')
install.packages("faraway")
data('oatvar', package='faraway')
glimpse(oatvar)
ggplot(oatvar, aes(y=yield, x=block, color=variety)) +
geom_point(size=5) +
geom_line(aes(x=as.integer(block)))
mean(oatvar$yield)
# Option 1
mean(oatvar$yield)
# Option 2
oatvar$yield %>% mean
oatvar %>%
group_by(variety) %>%
summarise(mean_yield = mean(yield))
arrange(mean_yield)
oatvar %>%
group_by(variety) %>%
summarise(mean_yield = mean(yield)) %>%
arrange(mean_yield)
lm(yield ~ variety, data = oatvar)
lm(yield ~ variety + block, data = oatvar)
library(MASS)
library(tidyverse)
glimpse(Rabbit)
ggplot(Rabbit, aes(x = Dose, y = BPchange, colour = Animal)) +
geom_point()+
geom_line()+
facet_wrap(~ Treatment)
ggplot(Rabbit, aes(x = Dose, y = BPchange, colour = Treatment)) +
geom_point()+
geom_line()+
facet_wrap(~ Animal)
Rabbit %>%
group_by(Animal) %>%
summarise(mean_BP = mean(BPchange),
var_BP = var(BPchange))
Rabbit %>%
group_by(Treatment) %>%
summarise(mean_BP = mean(BPchange),
var_BP = var(BPchange))
Rabbit %>%
group_by(Animal, Treatment) %>%
summarise(mean_BP = mean(BPchange),
var_BP = var(BPchange))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data('oatvar', package='faraway')
glimpse(oatvar)
ggplot(oatvar, aes(y=yield, x=block, color=variety)) +
geom_point(size=5) +
geom_line(aes(x=as.integer(block)))
# Option 1
mean(oatvar$yield)
# Option 2
# Option 1
mean(oatvar$yield)
# Option 2
oatvar$yield %>%  mean
oatvar %>%
group_by(variety) %>%
summarise(mean_yield = mean(yield)) %>%
arrange(mean_yield)
lm(yield ~ variety, data = oatvar)
lm(yield ~ variety + block,data = oatvar)
library(MASS)
library(tidyverse)
glimpse(Rabbit)
ggplot(Rabbit, aes(x = Dose, y = BPchange, colour = Animal)) +
geom_point()+
geom_line()+
facet_wrap(~Treatment)
ggplot(Rabbit, aes(x = Dose, y = BPchange,colour = Treatment)) +
geom_point()+
geom_line()+
facet_wrap(~Animal)
Rabbit %>%
group_by(Treatment) %>%
summarise(mean_BP = mean(BPchange),
var_BP = var(BPchange))
Rabbit %>%
group_by(Animals) %>%
summarise(mean_BP = mean(BPchange),
var_BP = var(BPchange))
Rabbit %>%
group_by(Animal) %>%
summarise(mean_BP = mean(BPchange),
var_BP = var(BPchange))
Rabbit %>%
group_by(Animal,Treatment) %>%
summarise(mean_BP = mean(BPchange),
var_BP = var(BPchange))
Rabbit %>%
group_by(Animal:Treatment) %>%
summarise(mean_BP = mean(BPchange),
var_BP = var(BPchange))
Rabbit %>%
group_by(Animal,Treatment) %>%
summarise(mean_BP = mean(BPchange),
var_BP = var(BPchange))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data('oatvar', package='faraway')
glimpse(oatvar)
ggplot(oatvar, aes(y=yield, x=block, color=variety)) +
geom_point(size=5) +
geom_line(aes(x=as.integer(block)))
# Option 1
mean(oatvar$yield)
# Option 2
oatvar$ yield %>%  mean()
oatvar %>%
group_by(variety) %>%
summarise(mean_yield = mean(yield)) %>%
arrange(mean_yield)
lm(yeild ~ variety,data = oatvar)
lm(yield ~ variety,data = oatvar)
lm(yield ~ variety + block, data = oatvar)
library(MASS)
library(tidyverse)
glimpse(Rabbit)
ggplot(Rabbit, aes(x = Dose, y = BPchange,colour = Animal)) +
geom_point()+
geom_line()+
facet_wrap(~Treatment)
ggplot(Rabbit, aes(x = Dose, y = BPchange,colour = Treatment)) +
geom_point()+
geom_line()+
facet_wrap(~Animal)
Rabbit %>%
group_by(Treatment) %>%
summarise(mean_bp = mean(BPchange),
var_bp = var(BPchange))
Rabbit %>%
group_by(Animal) %>%
summarise(mean_bp = mean(BPchange),
var_bp = var(BPchange))
Rabbit %>%
group_by(Animal, Treatment) %>%
summarise(mean_bp = mean(BPchange),
var_bp = var(BPchange))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data('oatvar', package='faraway')
glimpse(oatvar)
ggplot(oatvar, aes(y=yield, x=block, color=variety)) +
geom_point(size=5) +
geom_line(aes(x=as.integer(block)))
# Option 1
mean(oatvar$yield)
# Option 2
oatvar$yield %>%  mean()
oatvar %>%
group_by(variety) %>%
summarise(mean_yield = mean(yield)) %>%
arrange(mean_yield)
lm(yield ~ variety, data = oatvar)
lm(yield ~ variety + block, data = oatvar)
library(MASS)
library(tidyverse)
glimpse(Rabbit)
ggplot(Rabbit, aes(x = Dose, y = BPchange,colour = Animal)) +
geom_point()+
geom_line()+
facet_wrap(~Treatment)
ggplot(Rabbit, aes(x = Dose, y = BPchange,colour = Treatment)) +
geom_point()+
geom_line()+
facet-wrap(~Animal)
ggplot(Rabbit, aes(x = Dose, y = BPchange,colour = Treatment)) +
geom_point()+
geom_line()+
facet_wrap(~Animal)
Rabbit %>%
group_by(Treatment) %>%
summarise(mean_BP = mean(BPchange))
Rabbit %>%
group_by(Animal) %>%
summarise(mean_BP = mean(BPchange),
var_BP = var(BPchange))
Rabbit %>%
group_by(Animal,Treatment) %>%
summarise(mean_BP = mean(BPchange),
var_BP = var(BPchange))
devtools::install_github("ncahill89/EIVmodels")
devtools::install_github("ncahill89/EIVmodels")
#devtools::install_github("ncahill89/EIVmodels")
library(EIVmodels)
dat <- sim_slr(n_sim = 10,
alpha = 0,
beta = 1,
x_err = 0.1)
dat
plot_dat(dat,
add_truth = TRUE)
mod_eiv_slr <- run_mod(dat,
model = "model_eiv_slr")
plot_res(mod_eiv_slr,
add_truth = TRUE)
mod_reg_res <- par_est(mod = mod_eiv_slr)
mod_reg_res$pred_summary
mod_reg_res$par_summary
EIVmodels::NJ_CC
plot_dat(NJ_CC)
mod_eiv_slr <- run_mod(NJ_CC,
model = "model_eiv_slr",
scale_factor = 1000)
mod_reg_res <- par_est(mod = mod_eiv_slr)
mod_reg_res$par_summary
plot_res(mod_eiv_slr)
mod_eiv_cp1 <- run_mod(NJ_CC,
model = "model_eiv_cp1",
scale_factor = 1000)
mod_cp_res <- par_est(mod = mod_eiv_cp1)
mod_cp_res$par_summary
plot_res(mod_eiv_cp1)
mod_eiv_igp <- run_mod(NJ_CC,
model = "model_eiv_igp",
scale_factor = 1000)
mod_igp_res <- par_est(mod = mod_eiv_igp)
mod_igp_res$pred_summary
mod_igp_res$par_summary
plot_res(mod_eiv_igp)
knitr::opts_chunk$set(echo = TRUE)
biopsy <- MASS::biopsy %>% drop_na() %>% select(-ID)
library(tidyverse)
glimpse(quakes)
biopsy <- MASS::biopsy %>% drop_na() %>% select(-ID)
glimpse(biopsy)
?biopsy
library(rsample)
?rsample
?initial_split
# Split data into training set
biopsy_split <- initial_split(biopsy, prop = 0.6)
train_biopsy_data <- training(biopsy_split)
test_biopsy_data  <- test(biopsy_split)
test_biopsy_data  <- testing(biopsy_split)
train_biopsy_data
dim(train_biopsy_data)
dim(test_biopsy_data)
?glm
logistic_model  <- glm(class ~ ., family = binomial, data = train_biopsy_data)
logistic_model
library(rpart)
library(rpart.plot)
?rpart
library(rpart)
library(rpart.plot)
tree_model <- rpart(class ~ .,data = train_biopsy_data)
rpart.plot(tree_model)
?predict
biopsy_res <- test_biopsy_data %>%
mutate(pred_p1 = (predict(logistic_model, type = "response",
newdata = test_biopsy_data))) %>%
mutate(pred_p2 = (predict(tree_model,
newdata = test_biopsy_data))
biopsy_res
biopsy_res <- test_biopsy_data %>%
mutate(pred_p1 = (predict(logistic_model, type = "response",
newdata = test_biopsy_data))) %>%
mutate(pred_p2 = (predict(tree_model,
newdata = test_biopsy_data))
)
biopsy_res
glimpse(biopsy_res)
pull(malignant)
biopsy_res <- test_biopsy_data %>%
mutate(pred_p1 = (predict(logistic_model, type = "response",
newdata = test_biopsy_data))) %>%
mutate(pred_p2 = (predict(tree_model,
newdata = test_biopsy_data)) %>% as_tibble() %>% pull(malignant)) %>%
mutate(pred_class1 = ifelse(pred_p1 >=0.5,"malignant","benign")) %>%
mutate(pred_class2 = ifelse(pred_p2 >=0.5,"malignant","benign"))
biopsy_res
confusion_logistic <- biopsy_res %>%
select(class, pred_class1) %>%
table
confusion_logistic
confusion_tree <- biopsy_res %>%
select(class, pred_class2) %>%
table
confusion_tree
accuracy_log <- (confusion_logistic %>%  diag() %>% sum)/nrow(biopsy_res)
accuracy_log
accuracy_tree <- (confusion_tree %>%  diag() %>% sum)/nrow(biopsy_res)
accuracy_tree
confusion_logistic
TPR_log <- 88/(88+7)
TPR_log
confusion_tree
TPR_tree <- 89/89+6
TPR_tree
TPR_tree <- 89/(89+6)
TPR_tree
TPR_log
TPR_tree
knitr::opts_chunk$set(echo = TRUE)
biopsy <- MASS::biopsy %>% drop_na() %>% select(-ID)
glimpse(biopsy)
?biopsy
library(rsample)
biopsy_split <- initial_split(biopsy, prop = 0.6)
set.seed(1234)
biopsy_split <- initial_split(biopsy, prop = 0.6)
library(rsample)
set.seed(1234)
biopsy_split <- initial_split(biopsy, prop = 0.6)
train_biopsy_data <- training(biopsy_split)
test_biopsy_data  <- testing(biopsy_split)
train_biopsy_data
dim(train_biopsy_data)
dim(test_biopsy_data)
logistic_model  <- glm(class ~ ., family = binomial, data = train_biopsy_data)
logistic_model
library(rpart)
library(rpart.plot)
tree_model <- rpart(class ~ .,data = train_biopsy_data)
rpart.plot(tree_model)
biopsy_res <- test_biopsy_data %>%
mutate(pred_p1 = (predict(logistic_model, type = "response",
newdata = test_biopsy_data))) %>%
mutate(pred_p2 = (predict(tree_model,
newdata = test_biopsy_data)) %>% as_tibble() %>% pull(malignant)) %>%
mutate(pred_class1 = ifelse(pred_p1 >=0.5,"malignant","benign")) %>%
mutate(pred_class2 = ifelse(pred_p2 >=0.5,"malignant","benign"))
biopsy_res
confusion_logistic <- biopsy_res %>%
select(class, pred_class1) %>%
table
confusion_logistic
confusion_tree <- biopsy_res %>%
select(class, pred_class2) %>%
table
confusion_tree
accurancy_log <- (confusion_logistic %>% diag() %>% sum)/nrow(biopsy_res)
accurancy_log
accuracy_tree <- (confusion_tree %>% diag() %>% sum)/nrow(biopsy_res)
accuracy_tree
TPR_log <- 87/(87+4)
TPR_log
TPR_tree <- 84/(84+7)
TPR_tree
knitr::opts_chunk$set(echo = TRUE)
biopsy <- MASS::biopsy %>% drop_na() %>% select(-ID)
glimpse(biopsy)
library(rsample)
set.seed(1234)
biopsy_split <- initial_split(biopsy, prop = 0.6)
train_biopsy_data <- training(biopsy_split)
test_biopsy_data  <- testing(biopsy_split)
train_biopsy_data
test_biopsy_data
logistic_model  <- glm(class ~ ., family = binomial, data = train_biopsy_data)
logistic_model
library(rpart)
library(rpart.plot)
tree_model <- rpart(class ~ .,data = train_biopsy_data)
rpart.plot(tree_model)
biopsy_res <- test_biopsy_data %>%
mutate(pred_p1 = (predict(logistic_model, type = "response",
newdata = test_biopsy_data))) %>%
mutate(pred_p2 = (predict(tree_model,
newdata = test_biopsy_data)) %>% as_tibble() %>% pull(malignant)) %>%
mutate(pred_class1 = ifelse(pred_p1 >=0.5,"malignant","benign")) %>%
mutate(pred_class2 = ifelse(pred_p2 >=0.5,"malignant","benign"))
biopsy_res
confusion_logistic <- biopsy_res %>%
select(class, pred_class1) %>%
table
confusion_logistic
confusion_tree <- biopsy_res %>%
select(class, pred_class2) %>%
table
confusion_tree
accuracy_log <- (confusion_logistic %>% diag() %>% sum)/nrow(biopsy_res)
accuracy_log
accuracy_tree <- (confusion_tree %>% diag() %>% sum)/nrow(biopsy_res)
accuracy_tree
TPR_log <- 87/(87+4)
TPR_log
TPR_tree <- 84/(84+7)
TPR_tree
nrow(biopsy_res)
(confusion_logistic %>% diag() %>% sum)
nrow(biopsy_res)
knitr::opts_chunk$set(echo = TRUE)
biopsy <- MASS::biopsy %>% drop_na() %>% select(-ID)
glimpse(biopsy)
library(rsample)
set.seed(12345)
biopsy_split <- initial_split(biopsy, prop = 0.6)
train_biopsy_data <- training(biopsy_split)
test_biopsy_data  <- testing(biopsy_split)
test_biopsy_data
train_biopsy_data
logistic_model  <- glm(class~., family = binomial, data = train_biopsy_data)
logistic_model
library(rpart)
library(rpart.plot)
tree_model <- rpart(class ~ .,data = train_biopsy_data)
rpart.plot(tree_model)
biopsy_res <- test_biopsy_data %>%
mutate(pred_p1 = (predict(logistic_model, type = "response",
newdata = test_biopsy_data))) %>%
mutate(pred_p2 = (predict(tree_model,
newdata = test_biopsy_data)) %>% as_tibble() %>% pull(malignant)) %>%
mutate(pred_class1 = ifelse(pred_p1 >=0.5,"malignant","benign")) %>%
mutate(pred_class2 = ifelse(pred_p2 >=0.5,"malignant","benign"))
biopsy_res
confusion_logistic <- biopsy_res %>%
select(class, pred_class1) %>%
table
confusion_logistic
confusion_tree <- biopsy_res %>%
select(class, pred_class2) %>%
table
confusion_tree
accuracy_log <- (confusion_logistic %>% diag() %>% sum)/nrow(biopsy_res)
accuracy_log
accuracy_tree <- (confusion_tree %>% diag() %>% sum)/nrow(biopsy_res)
accuracy_tree
TPR_log <- 90/(90+3)
TPR_log
TPR_tree <- 84/(84+9)
TPR_tree
TPR_log
View(biopsy)
devtools::install_github("ncahill89/BTF")
library(BTF)
modern_mod <- run_modern(modern_elevation = NJ_modern_elevation,
modern_species = NJ_modern_species,
n.iter = 10,
n.burnin = 1,
n.thin = 1)
source("~/Desktop/Github/tide_gauge_data_PSMSL/psml_annual_tide_data_code.R", echo=TRUE)
